<project default="all">
  <!-- Define an environment variable pointing to JMETER folder or change this -->
  <property environment="env"/>
  <condition property="jmeter-home" value="${env.JMETER_DIR}" else="C:\apache-jmeter-2.6">
        <isset property="env.JMETER_DIR" />
  </condition>

	<!-- Performance Variables -->
    <!-- for a variable from the ant command line like ant -DLOOPS_PER_USER=11 -->
    <condition property="loopsPerUser" value="${LOOPS_PER_USER}" else="10">
          <isset property="LOOPS_PER_USER" />
    </condition>
    <condition property="loopsPerAdmin" value="${LOOPS_PER_ADMIN}" else="10">
          <isset property="LOOPS_PER_ADMIN" />
    </condition>
    <condition property="numAdmins" value="${NUM_ADMINS}" else="5">
          <isset property="NUM_ADMINS" />
    </condition>
    <condition property="numUsers" value="${NUM_USERS}" else="10">
          <isset property="NUM_USERS" />
    </condition>
	
	<!-- Scenario Variables -->
    <condition property="scenarioNumUsers" value="${SCENARIO_NUM_USERS}" else="400">
          <isset property="SCENARIO_NUM_USERS" />
    </condition>
    <condition property="scenarioLoopsPerUser" value="${SCENARIO_LOOPS_PER_USER}" else="100">
          <isset property="SCENARIO_LOOPS_PER_USER" />
    </condition>
    <condition property="scenarioNewUsers%" value="${SCENARIO_NEW_USERS_%}" else="10">
          <isset property="SCENARIO_NEW_USER_%" />
    </condition>
    <condition property="scenarioInitialLoginUsers%" value="${SCENARIO_INITIAL_LOGIN_USERS_%}" else="40">
          <isset property="SCENARIO_INITIAL_LOGIN_USERS_%" />
    </condition>
    <condition property="scenarioInitialLoginTime" value="${SCENARIO_INITIAL_LOGIN_TIME}" else="900000">
          <isset property="SCENARIO_INITIAL_LOGIN_TIME" />
    </condition>
    <condition property="scenarioTotalLoginTime" value="${SCENARIO_TOTAL_LOGIN_TIME}" else="3600000">
          <isset property="SCENARIO_TOTAL_LOGIN_TIME" />
    </condition>
    <condition property="scenarioMinDelay" value="${SCENARIO_MIN_DELAY}" else="3000">
          <isset property="SCENARIO_MIN_DELAY" />
    </condition>
    <condition property="scenarioMaxDelay" value="${SCENARIO_MAX_DELAY}" else="60000">
          <isset property="SCENARIO_MAX_DELAY" />
    </condition>
    <condition property="scenarioRealisticLoginEnabled" value="${SCENARIO_REALISTIC_LOGIN_ENABLED}" else="true">
          <isset property="SCENARIO_REALISTIC_LOGIN_ENABLED" />
    </condition>
    <condition property="scenarioInitialLoginEnabled" value="${SCENARIO_INITIAL_LOGIN_ENABLED}" else="true">
          <isset property="SCENARIO_INITIAL_LOGIN_ENABLED" />
    </condition>

  <!-- ant-jmeter.jar comes with jmeter, be sure this is the release you have -->
  <path id="ant.jmeter.classpath">
    <pathelement
       location="${jmeter-home}/extras/ant-jmeter-1.1.1.jar" />
  </path>
  <taskdef
    name="jmeter"
    classname="org.programmerplanet.ant.taskdefs.jmeter.JMeterTask"
    classpathref="ant.jmeter.classpath" />
  <target name="clean">
     <delete includeemptydirs="true" failonerror="false">
          <fileset dir="test-reports/jtl" >
          </fileset>
         <fileset dir="test-reports/html" >
         </fileset>
     </delete>
    <mkdir dir="test-reports/jtl"/>
    <mkdir dir="test-reports/html"/>
  </target>
    <target name="logParameters">
      <echo message="jmeter-home: ${jmeter-home}"/>
      <echo message="numAdmins: ${numAdmins}"/>
      <echo message="numUsers: ${numUsers}"/>
      <echo message="loopsPerUser: ${loopsPerUser}"/>
      <echo message="loopsPerAdmin: ${loopsPerAdmin}"/>
      <echo message="---Scenario Variables---/>" />
      <echo message="scenarioNumUsers: ${scenarioNumUsers}"/>
      <echo message="scenarioLoopsPerUser: ${scenarioLoopsPerUser}"/>
      <echo message="scenarioNewUsers%: ${scenarioNewUsers%}"/>
      <echo message="scenarioInitialLoginUsers%: ${scenarioInitialLoginUsers%}"/>
      <echo message="scenarioInitialLoginTime: ${scenarioInitialLoginTime}"/>
      <echo message="scenarioTotalLoginTime: ${scenarioTotalLoginTime}"/>
      <echo message="scenarioMinDelay: ${scenarioMinDelay}"/>
      <echo message="scenarioMaxDelay: ${scenarioMaxDelay}"/>
      <echo message="scenarioRealisticLoginEnabled: ${scenarioRealisticLoginEnabled}"/>
      <echo message="scenarioInitialLoginEnabled: ${scenarioInitialLoginEnabled}"/>
    </target>
	
	<target name="prep-server" depends="clean, logParameters">
		<!--execute test to prep the server-->
		<jmeter jmeterhome="${jmeter-home}" resultlogdir="test-reports/jtl">
			<property name="hostName" value="perfowfapp01.goss.owfgoss.org"/>
			<property name="hostPort" value="8443"/>
			<property name="casHost" value="perfowfapp01.goss.owfgoss.org"/>
			<property name="casPort" value="8443"/>
			<property name="numUsers" value="100"/>
		   <!-- JVM ARGUMENTS -->
		   <jvmarg value="-Duser.dir=${basedir}"/> <!-- HEAP -->
		   <jvmarg value="-Xms768m"/> <!-- HEAP -->
		   <jvmarg value="-Xmx4096m"/> <!-- HEAP -->
		   <jvmarg value="-XX:NewSize=128m"/> <!-- NEW -->
		   <jvmarg value="-XX:MaxNewSize=1024m"/> <!-- NEW -->
		   <jvmarg value="-XX:SurvivorRatio=8"/> <!-- SURVIVOR -->
		   <jvmarg value="-XX:TargetSurvivorRatio=50"/> <!-- SURVIVOR -->
		   <jvmarg value="-XX:MaxTenuringThreshold=2"/> <!-- TENURING -->
		   <jvmarg value="-XX:MaxLiveObjectEvacuationRatio=50"/> <!-- EVACUATION -->
		   <jvmarg value="-Dsun.rmi.dgc.client.gcInterval=600000"/> <!-- RMIGC -->
		   <jvmarg value="-Dsun.rmi.dgc.server.gcInterval=600000"/> <!-- RMIGC -->
		   <jvmarg value="-XX:PermSize=64m"/> <!-- PERM -->
		   <jvmarg value="-XX:MaxPermSize=512m"/> <!-- PERM -->
		   <!-- jvmarg value="-verbose:gc -XX:+PrintTenuringDistribution"/ --> <!-- DEBUG -->
		   <jvmarg value="-XX:+HeapDumpOnOutOfMemoryError"/> <!-- DUMP --> <!--Always dump on OOM (does not cost anything unless triggered)-->
		   <!-- ADD TESTS HERE -->
		   <testplans dir=".">
			   <include name="prep_server.jmx" />
		   </testplans>
		</jmeter>
	</target>
	
	<target name="performance-test" depends="prep-server">
		<!--execute performance tests-->
		<jmeter jmeterhome="${jmeter-home}" resultlogdir="test-reports/jtl">
			<property name="hostName" value="perfowfapp01.goss.owfgoss.org"/>
			<property name="hostPort" value="8443"/>
			<property name="casHost" value="perfowfapp01.goss.owfgoss.org"/>
			<property name="casPort" value="8443"/>
			<property name="metricHostName" value="perfmetric01.goss.owfgoss.org"/>
			<property name="metricHostPort" value="8443"/>
			<property name="loopsPerUser" value="${loopsPerUser}"/>
			<property name="loopsPerAdmin" value="${loopsPerAdmin}"/>
			<property name="numAdmins" value="${numAdmins}"/>
			<property name="numUsers" value="${numUsers}"/>
		   <!-- JVM ARGUMENTS -->
		   <jvmarg value="-Duser.dir=${basedir}"/> <!-- HEAP -->
		   <jvmarg value="-Xms768m"/> <!-- HEAP -->
		   <jvmarg value="-Xmx4096m"/> <!-- HEAP -->
		   <jvmarg value="-XX:NewSize=128m"/> <!-- NEW -->
		   <jvmarg value="-XX:MaxNewSize=1024m"/> <!-- NEW -->
		   <jvmarg value="-XX:SurvivorRatio=8"/> <!-- SURVIVOR -->
		   <jvmarg value="-XX:TargetSurvivorRatio=50"/> <!-- SURVIVOR -->
		   <jvmarg value="-XX:MaxTenuringThreshold=2"/> <!-- TENURING -->
		   <jvmarg value="-XX:MaxLiveObjectEvacuationRatio=50"/> <!-- EVACUATION -->
		   <jvmarg value="-Dsun.rmi.dgc.client.gcInterval=600000"/> <!-- RMIGC -->
		   <jvmarg value="-Dsun.rmi.dgc.server.gcInterval=600000"/> <!-- RMIGC -->
		   <jvmarg value="-XX:PermSize=64m"/> <!-- PERM -->
		   <jvmarg value="-XX:MaxPermSize=512m"/> <!-- PERM -->
		   <!-- jvmarg value="-verbose:gc -XX:+PrintTenuringDistribution"/ --> <!-- DEBUG -->
		   <jvmarg value="-XX:+HeapDumpOnOutOfMemoryError"/> <!-- DUMP --> <!--Always dump on OOM (does not cost anything unless triggered)-->
		   <!-- ADD TESTS HERE -->
		   <testplans dir=".">
			   <include name="*.jmx" />
			   <exclude name="scenario_*.jmx" />
			   <exclude name="prep_server.jmx" />
		   </testplans>
		</jmeter>
	</target>
		
	<target name="scenario-test" depends="prep-server">
		<!--execute scenario tests-->
		<jmeter jmeterhome="${jmeter-home}" resultlogdir="test-reports/jtl">
			  <property name="hostName" value="perfowfapp01.goss.owfgoss.org"/>
			  <property name="hostPort" value="8443"/>
			  <property name="casHost" value="perfowfapp01.goss.owfgoss.org"/>
			  <property name="casPort" value="8443"/>
			  <property name="metricHostName" value="perfmetric01.goss.owfgoss.org"/>
			  <property name="metricHostPort" value="8443"/>
			  <property name="loopsPerUser" value="${scenarioLoopsPerUser}"/>
			  <property name="numUsers" value="${scenarioNumUsers}"/>
			  <property name="newUsers%" value="${scenarioNewUsers%}"/>
			  <property name="initialLoginUsers%" value="${scenarioInitialLoginUsers%}"/>
			  <property name="initialLoginTime" value="${scenarioInitialLoginTime}"/>
			  <property name="totalLoginTime" value="${scenarioTotalLoginTime}"/>
			  <property name="minDelayBetweenActions" value="${scenarioMinDelay}"/>
			  <property name="maxDelayBetweenActions" value="${scenarioMaxDelay}"/>
			  <property name="realisticLoginEnabled" value="${scenarioRealisticLoginEnabled}"/>
			  <property name="initialLoginEnabled" value="${scenarioInitialLoginEnabled}"/>
			 <!-- JVM ARGUMENTS -->
			 <jvmarg value="-Duser.dir=${basedir}"/> <!-- HEAP -->
			 <jvmarg value="-Xms768m"/> <!-- HEAP -->
			 <jvmarg value="-Xmx8192m"/> <!-- HEAP -->
			 <jvmarg value="-XX:NewSize=128m"/> <!-- NEW -->
			 <jvmarg value="-XX:MaxNewSize=1024m"/> <!-- NEW -->
			 <jvmarg value="-XX:SurvivorRatio=8"/> <!-- SURVIVOR -->
			 <jvmarg value="-XX:TargetSurvivorRatio=50"/> <!-- SURVIVOR -->
			 <jvmarg value="-XX:MaxTenuringThreshold=2"/> <!-- TENURING -->
			 <jvmarg value="-XX:MaxLiveObjectEvacuationRatio=50"/> <!-- EVACUATION -->
			 <jvmarg value="-Dsun.rmi.dgc.client.gcInterval=600000"/> <!-- RMIGC -->
			 <!--<jvmarg value="-Dsun.rmi.dgc.server.gcInterval=600000"/> --><!-- RMIGC -->
			 <jvmarg value="-XX:PermSize=128m"/> <!-- PERM -->
			 <jvmarg value="-XX:MaxPermSize=1024"/> <!-- PERM -->
			 <!-- jvmarg value="-verbose:gc -XX:+PrintTenuringDistribution"/ --> <!-- DEBUG -->
			 <jvmarg value="-XX:+HeapDumpOnOutOfMemoryError"/> <!-- DUMP --> <!--Always dump on OOM (does not cost anything unless triggered)-->
			 <!-- ADD TESTS HERE -->
			 <testplans dir=".">
				 <include name="scenario_*.jmx" />
			 </testplans>
		</jmeter>
	</target>
	
	<!-- This is not needed for the plugin, but it produces a nice html report
	which can be saved using hudson's archive artifact feature -->
	<target name="performance-report" depends="performance-test">
		<xslt
			basedir="test-reports/jtl"
			destdir="test-reports/html"
			includes="*.jtl"
			style="${jmeter-home}/extras/jmeter-results-detail-report_21.xsl"/>
	</target>
	<target name="scenario-report" depends="scenario-test">
		<xslt
			basedir="test-reports/jtl"
			destdir="test-reports/html"
			includes="*.jtl"
			style="${jmeter-home}/extras/jmeter-results-detail-report_21.xsl"/>
	</target>
	
	<target name="all" depends="performance-report, scenario-report"/>
</project>
